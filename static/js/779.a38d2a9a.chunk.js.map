{"version":3,"file":"static/js/779.a38d2a9a.chunk.js","mappings":"sLAEaA,E,QAAWC,EAAAA,GAAH,qGACL,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,QAAQ,EAApB,IAEN,SAAAF,GAAC,OAAIA,EAAEC,MAAME,OAAOC,WAAnB,IACG,SAAAJ,GAAC,OAAIA,EAAEC,MAAMI,UAAUC,CAAtB,I,SCIhB,EARc,WACZ,OACE,0BACE,SAACR,EAAD,4DAGL,C,oKCNYS,EAAcR,EAAAA,EAAAA,GAAH,kFAGf,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,QAAQ,EAApB,IAGGM,EAAcT,EAAAA,EAAAA,EAAH,oEACP,SAAAC,GAAC,OAAIA,EAAEC,MAAMQ,YAAYC,IAAxB,IACC,SAAAV,GAAC,OAAIA,EAAEC,MAAMC,QAAQ,EAApB,I,6BCuCpB,EA1CgB,WACd,IAAQS,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAkB,mCAAG,oGAEvBJ,GAAW,GAFY,UAGDK,EAAAA,EAAAA,IAAiBX,GAHhB,OAGjBY,EAHiB,OAIvBR,EAAWQ,GAJY,gDAMvBJ,EAAS,KAAMK,SANQ,yBAQvBP,GAAW,GARY,4EAAH,qDAWxBI,GACD,GAAE,CAACV,KAGF,gCACGO,IAAS,SAACO,EAAA,EAAD,IACTT,IAAW,SAACU,EAAA,EAAD,IACQ,IAAnBZ,EAAQa,SAAiBX,IAAW,sDAE7B,OAAPF,QAAO,IAAPA,OAAA,EAAAA,EAASa,QAAS,IACjB,SAACpB,EAAD,UACGO,EAAQc,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,2BACE,UAACvB,EAAD,qBAAqBsB,MACrB,qCAAaC,OAFNF,EADE,QAUtB,C,wLC7CKG,E,QAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,mCACTC,SAAU,QACVC,KAAM,EACNC,eAAe,KAINC,EAAiB,mCAAG,sGACRR,EAASS,IAAI,uBADL,uBACvBC,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,qDAKjBC,EAAc,mCAAG,WAAMC,GAAN,yFACLZ,EAASS,IAAT,iBAA+B,CACpDN,OAAQ,CACNS,MAAAA,KAHwB,uBACpBF,EADoB,EACpBA,KADoB,kBAMrBA,GANqB,2CAAH,sDASdG,EAAY,mCAAG,WAAMlC,GAAN,yFACHqB,EAASS,IAAT,iBAAuB9B,EAAvB,MADG,uBAClB+B,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZI,EAAe,mCAAG,WAAMnC,GAAN,yFACNqB,EAASS,IAAT,iBAAuB9B,EAAvB,cADM,uBACrB+B,EADqB,EACrBA,KADqB,kBAEtBA,EAAKK,MAFiB,2CAAH,sDAKfzB,EAAgB,mCAAG,WAAMX,GAAN,yFACPqB,EAASS,IAAT,iBAAuB9B,EAAvB,cADO,uBACtB+B,EADsB,EACtBA,KADsB,kBAEvBA,EAAKnB,SAFkB,2CAAH,qD","sources":["components/Error/Error.styled.js","components/Error/Error.jsx","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ErrorMsg = styled.h4`\n  margin-top: ${p => p.theme.spacing(5)};\n  text-align: center;\n  color: ${p => p.theme.colors.accentColor};\n  font-size: ${p => p.theme.fontSizes.l};\n`;\n","import { ErrorMsg } from './Error.styled';\n\nconst Error = () => {\n  return (\n    <div>\n      <ErrorMsg>Something went wrong. Try reloading the page</ErrorMsg>\n    </div>\n  );\n};\n\nexport default Error;\n","import styled from '@emotion/styled';\n\nexport const ReviewsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.spacing(5)};\n`;\n\nexport const ReviewsName = styled.p`\n  font-weight: ${p => p.theme.fontWeights.bold};\n  margin-bottom: ${p => p.theme.spacing(2)};\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviewsMovies } from 'services/api';\nimport { ReviewsList, ReviewsName } from './Reviews.styled';\nimport Error from 'components/Error/Error';\nimport Loader from 'components/Loader/Loader';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n\n  const [reviews, setReviews] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchReviewsMovies = async () => {\n      try {\n        setLoading(true);\n        const results = await getReviewsMovies(movieId);\n        setReviews(results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchReviewsMovies();\n  }, [movieId]);\n\n  return (\n    <>\n      {error && <Error />}\n      {loading && <Loader />}\n      {reviews.length === 0 && !loading && <p>There is nothing here yet</p>}\n\n      {reviews?.length > 0 && (\n        <ReviewsList>\n          {reviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <ReviewsName>Autor: {author}</ReviewsName>\n              <p>Reviews: {content}</p>\n            </li>\n          ))}\n        </ReviewsList>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '4fbbe6209ef8b6b30e6151d4478e9f78',\n    language: 'en-US',\n    page: 1,\n    include_adult: false,\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data;\n};\n\nexport const getSearchMovie = async query => {\n  const { data } = await instance.get(`/search/movie?`, {\n    params: {\n      query,\n    },\n  });\n  return data;\n};\n\nexport const getMovieById = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}?`);\n  return data;\n};\n\nexport const getCreditsMovie = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}/credits?`);\n  return data.cast;\n};\n\nexport const getReviewsMovies = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}/reviews?`);\n  return data.results;\n};\n"],"names":["ErrorMsg","styled","p","theme","spacing","colors","accentColor","fontSizes","l","ReviewsList","ReviewsName","fontWeights","bold","movieId","useParams","useState","reviews","setReviews","loading","setLoading","error","setError","useEffect","fetchReviewsMovies","getReviewsMovies","results","message","Error","Loader","length","map","id","author","content","instance","axios","baseURL","params","api_key","language","page","include_adult","getTrendingMovies","get","data","getSearchMovie","query","getMovieById","getCreditsMovie","cast"],"sourceRoot":""}