{"version":3,"file":"static/js/156.fa274725.chunk.js","mappings":"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","sources":["components/Error/Error.styled.js","components/Error/Error.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","pages/HomePage/HomePage.styled.js","pages/HomePage/HomePage.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ErrorMsg = styled.h4`\n  margin-top: ${p => p.theme.spacing(5)};\n  text-align: center;\n  color: ${p => p.theme.colors.accentColor};\n  font-size: ${p => p.theme.fontSizes.l};\n`;\n","import { ErrorMsg } from './Error.styled';\n\nconst Error = () => {\n  return (\n    <div>\n      <ErrorMsg>Something went wrong. Try reloading the page</ErrorMsg>\n    </div>\n  );\n};\n\nexport default Error;\n","import styled from '@emotion/styled';\n\nexport const MoviesListStyled = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  gap: ${p => p.theme.spacing(2)};\n`;\n\nexport const MovieItem = styled.li`\n  border-radius: ${p => p.theme.radius.normal};\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  &:hover,\n  &:focus {\n    cursor: pointer;\n    transform: scale(1.03);\n  }\n`;\n\nexport const MovieName = styled.h4`\n  font-size: ${p => p.theme.fontSizes.m};\n  text-align: center;\n`;\n\nexport const RealeseDate = styled.p`\n  font-size: ${p => p.theme.fontSizes.m};\n  margin-top: ${p => p.theme.spacing(2)};\n  color: ${p => p.theme.colors.secondaryText};\n  text-align: center;\n`;\n\nexport const MovieImg = styled.img`\n  width: 100%;\n  height: 150px;\n  object-fit: cover;\n  border-radius: 5px;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport {\n  MoviesListStyled,\n  MovieItem,\n  MovieName,\n  RealeseDate,\n  MovieImg,\n} from './MoviesList.styled';\nimport PropTypes from 'prop-types';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <div>\n      <MoviesListStyled>\n        {movies.map(({ id, title, poster_path, release_date }) => (\n          <MovieItem key={id}>\n            <Link state={{ from: location }} to={`/movies/${id}`}>\n              <MovieImg\n                src={`https://image.tmdb.org/t/p/w300/${poster_path}`}\n                alt={title}\n              />\n              <MovieName>{title}</MovieName>\n              <RealeseDate>{release_date}</RealeseDate>\n            </Link>\n          </MovieItem>\n        ))}\n      </MoviesListStyled>\n    </div>\n  );\n};\n\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string.isRequired,\n      release_date: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const TitleStyles = styled.h1`\n  font-size: ${p => p.theme.fontSizes.xxl};\n  margin-bottom: ${p => p.theme.spacing(4)};\n  margin-top: ${p => p.theme.spacing(4)};\n  text-align: center;\n`;\n","import { useState, useEffect } from 'react';\nimport { getTrendingMovies } from 'services/api';\nimport { TitleStyles } from './HomePage.styled';\nimport Error from 'components/Error/Error';\nimport Loader from 'components/Loader/Loader';\n\nimport MoviesList from 'components/MoviesList/MoviesList';\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchTrendingMovies = async () => {\n      try {\n        setLoading(true);\n        const { results } = await getTrendingMovies();\n        setMovies(prevState => [...prevState, ...results]);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchTrendingMovies();\n  }, []);\n  return (\n    <div>\n      <TitleStyles>Tranding today</TitleStyles>\n      {movies?.length > 0 && <MoviesList movies={movies} />}\n      {error && <Error />}\n      {loading && <Loader />}\n    </div>\n  );\n};\n\nexport default HomePage;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '4fbbe6209ef8b6b30e6151d4478e9f78',\n    language: 'en-US',\n    page: 1,\n    include_adult: false,\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data;\n};\n\nexport const getSearchMovie = async query => {\n  const { data } = await instance.get(`/search/movie?`, {\n    params: {\n      query,\n    },\n  });\n  return data;\n};\n\nexport const getMovieById = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}?`);\n  return data;\n};\n\nexport const getCreditsMovie = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}/credits?`);\n  return data.cast;\n};\n\nexport const getReviewsMovies = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}/reviews?`);\n  return data.results;\n};\n"],"names":["ErrorMsg","styled","p","theme","spacing","colors","accentColor","fontSizes","l","MoviesListStyled","MovieItem","radius","normal","MovieName","m","RealeseDate","secondaryText","MovieImg","movies","location","useLocation","map","id","title","poster_path","release_date","state","from","to","src","alt","TitleStyles","xxl","useState","setMovies","loading","setLoading","error","setError","useEffect","fetchTrendingMovies","getTrendingMovies","results","prevState","message","length","MoviesList","Error","Loader","instance","axios","baseURL","params","api_key","language","page","include_adult","get","data","getSearchMovie","query","getMovieById","movieId","getCreditsMovie","cast","getReviewsMovies"],"sourceRoot":""}