{"version":3,"file":"static/js/387.a7461cd5.chunk.js","mappings":"sRAEaA,EAAaC,EAAAA,EAAAA,GAAH,2EAGd,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,QAAQ,EAApB,IAGGC,EAAYJ,EAAAA,EAAAA,GAAH,iNAIH,SAAAC,GAAC,OAAIA,EAAEC,MAAMG,OAAOC,MAAnB,IAGPC,EAAYP,EAAAA,EAAAA,EAAH,+C,6BCqCtB,EA7Ca,WACX,IAAQQ,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,oGAEtBJ,GAAW,GAFW,UAGHK,EAAAA,EAAAA,GAAgBX,GAHb,OAGhBG,EAHgB,OAItBC,EAAQD,GAJc,gDAMtBK,EAAS,KAAMI,SANO,yBAQtBN,GAAW,GARW,4EAAH,qDAWvBI,GACD,GAAE,CAACV,KAGF,2BACGO,IAAS,SAACM,EAAA,EAAD,IACTR,IAAW,SAACS,EAAA,EAAD,IACK,IAAhBX,EAAKY,SAAiBV,IAAW,sDAC7B,OAAJF,QAAI,IAAJA,OAAA,EAAAA,EAAMY,QAAS,IACd,SAACxB,EAAD,UACGY,EAAKa,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,aAAb,OACR,UAACvB,EAAD,YACE,gBACEwB,IAAG,0CAAqCD,GACxCE,IAAKH,EACLI,MAAO,OAET,SAACvB,EAAD,UAAYmB,MANED,EADR,QAcnB,C,sEChDYM,E,QAAW/B,EAAAA,GAAH,qGACL,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,QAAQ,EAApB,IAEN,SAAAF,GAAC,OAAIA,EAAEC,MAAM8B,OAAOC,WAAnB,IACG,SAAAhC,GAAC,OAAIA,EAAEC,MAAMgC,UAAUC,CAAtB,I,SCIhB,EARc,WACZ,OACE,0BACE,SAACJ,EAAD,4DAGL,C,wLCNKK,E,QAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,mCACTC,SAAU,QACVC,KAAM,EACNC,eAAe,KAINC,EAAiB,mCAAG,sGACRR,EAASS,IAAI,uBADL,uBACvBC,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,qDAKjBC,EAAc,mCAAG,WAAMC,GAAN,yFACLZ,EAASS,IAAT,iBAA+B,CACpDN,OAAQ,CACNS,MAAAA,KAHwB,uBACpBF,EADoB,EACpBA,KADoB,kBAMrBA,GANqB,2CAAH,sDASdG,EAAY,mCAAG,WAAMzC,GAAN,yFACH4B,EAASS,IAAT,iBAAuBrC,EAAvB,MADG,uBAClBsC,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZ3B,EAAe,mCAAG,WAAMX,GAAN,yFACN4B,EAASS,IAAT,iBAAuBrC,EAAvB,cADM,uBACrBsC,EADqB,EACrBA,KADqB,kBAEtBA,EAAKnC,MAFiB,2CAAH,sDAKfuC,EAAgB,mCAAG,WAAM1C,GAAN,yFACP4B,EAASS,IAAT,iBAAuBrC,EAAvB,cADO,uBACtBsC,EADsB,EACtBA,KADsB,kBAEvBA,EAAKK,SAFkB,2CAAH,qD","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","components/Error/Error.styled.js","components/Error/Error.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ActorsList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: ${p => p.theme.spacing(5)};\n`;\n\nexport const ActorItem = styled.li`\n  flex-basis: calc((100% - 3 * 20px) / 4);\n  box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.12), 0px 1px 1px rgba(0, 0, 0, 0.14),\n    0px 2px 1px rgba(0, 0, 0, 0.2);\n  border-radius: ${p => p.theme.radius.normal};\n`;\n\nexport const ActorName = styled.p`\n  text-align: center;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCreditsMovie } from 'services/api';\nimport { ActorsList, ActorItem, ActorName } from './Cast.styled';\nimport Error from 'components/Error/Error';\nimport Loader from 'components/Loader/Loader';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n\n  const [cast, setCast] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchCreditsMovie = async () => {\n      try {\n        setLoading(true);\n        const cast = await getCreditsMovie(movieId);\n        setCast(cast);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchCreditsMovie();\n  }, [movieId]);\n\n  return (\n    <div>\n      {error && <Error />}\n      {loading && <Loader />}\n      {cast.length === 0 && !loading && <p>There is nothing here yet</p>}\n      {cast?.length > 0 && (\n        <ActorsList>\n          {cast.map(({ id, name, profile_path }) => (\n            <ActorItem key={id}>\n              <img\n                src={`https://image.tmdb.org/t/p/w300/${profile_path}`}\n                alt={name}\n                width={150}\n              />\n              <ActorName>{name}</ActorName>\n            </ActorItem>\n          ))}\n        </ActorsList>\n      )}\n    </div>\n  );\n};\n\nexport default Cast;\n","import styled from '@emotion/styled';\n\nexport const ErrorMsg = styled.h4`\n  margin-top: ${p => p.theme.spacing(5)};\n  text-align: center;\n  color: ${p => p.theme.colors.accentColor};\n  font-size: ${p => p.theme.fontSizes.l};\n`;\n","import { ErrorMsg } from './Error.styled';\n\nconst Error = () => {\n  return (\n    <div>\n      <ErrorMsg>Something went wrong. Try reloading the page</ErrorMsg>\n    </div>\n  );\n};\n\nexport default Error;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '4fbbe6209ef8b6b30e6151d4478e9f78',\n    language: 'en-US',\n    page: 1,\n    include_adult: false,\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data;\n};\n\nexport const getSearchMovie = async query => {\n  const { data } = await instance.get(`/search/movie?`, {\n    params: {\n      query,\n    },\n  });\n  return data;\n};\n\nexport const getMovieById = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}?`);\n  return data;\n};\n\nexport const getCreditsMovie = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}/credits?`);\n  return data.cast;\n};\n\nexport const getReviewsMovies = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}/reviews?`);\n  return data.results;\n};\n"],"names":["ActorsList","styled","p","theme","spacing","ActorItem","radius","normal","ActorName","movieId","useParams","useState","cast","setCast","loading","setLoading","error","setError","useEffect","fetchCreditsMovie","getCreditsMovie","message","Error","Loader","length","map","id","name","profile_path","src","alt","width","ErrorMsg","colors","accentColor","fontSizes","l","instance","axios","baseURL","params","api_key","language","page","include_adult","getTrendingMovies","get","data","getSearchMovie","query","getMovieById","getReviewsMovies","results"],"sourceRoot":""}